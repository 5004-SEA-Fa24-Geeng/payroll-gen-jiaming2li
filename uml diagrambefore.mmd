classDiagram



    IEmployee <|-- HourlyEmployee: implements(is a)
    IEmployee <|-- SalaryEmployee: implements(is a)
    ITimeCard <|-- TimeCard: implements(is a)
    IPayStub <|-- PayStub: implements(is a)

    HourlyEmployee --> PayStub: has a
    SalaryEmployee --> PayStub: has a

    Builder --> ITimeCard:uses
    Builder --> IEmployee:uses


    PayrollGenerator --> Builder:uses
    PayrollGenerator --> FileUtil:uses
    PayrollGenerator --> Arguments:uses
    PayrollGenerator --> IEmployee:uses
    PayrollGenerator --> ITimeCard:uses
    PayrollGenerator --> IPayStub:uses
    PayrollGenerator --> HourlyEmployee:uses
    PayrollGenerator --> SalaryEmployee:uses

    PayrollGenerator --|> Arguments : contains (static final)


    class IEmployee {
        <<interface>>
        + getName() String
        + getID() String
        + getPayRate() double
        + getEmployeeType() String
        + getYTDEarnings() double
        + getYTDTaxesPaid() double
        + getPretaxDeductions() double
        + runPayroll(hoursWorked:double) IPayStub
        + toCSV() String
    }


    class ITimeCard {
        <<interface>>
        + getEmployeeId() String
        + getHoursWorked() double
    }


    class IPayStub {
        <<interface>>
        + getPay() double
        + getTaxesPaid() double
        + toCSV() String
    }


    class PayStub {
    - tax: double
    - name: String
    - netPay: double
    + PayStub(String, double, double, double, double)
    + getName() String
    + getPay() double
    + getTaxesPaid() double
    + toCSV() String
    }


    class TimeCard {
        - id: String
        - hoursWorked: double
        + TimeCard(id: String, hoursWorked: double)
        + getEmployeeID() String
        + getHoursWorked() double
        + toString() String
    }


    class SalaryEmployee {
        - name: String
        - id: String
        - payRate: double
        - ytdEarnings: double
        - ytdTaxesPaid: double
        - pretaxDeductions: double
        + SalaryEmployee(String, String, double, double, double, double)
        + getName() String
        + getID() String
        + getPayRate() double
        + getYTDEarnings() double
        + getYTDTaxesPaid() double
        + getPretaxDeductions() double
        + getEmployeeType() String
        + runPayroll(hoursWorked: double) IPayStub
        + toCSV() String
    }


    class HourlyEmployee {
        - name: String
        - id: String
        - payRate: double
        - ytdEarnings: double
        - ytdTaxesPaid: double
        - pretaxDeductions: double
        + HourlyEmployee(String, String, double, double, double, double)
        + getName() String
        + getID() String
        + getPayRate() double
        + getYTDEarnings() double
        + getYTDTaxesPaid() double
        + getPretaxDeductions() double
        + getEmployeeType() String
        + runPayroll(hoursWorked: double) IPayStub
        + toCSV() String
    }


    class FileUtil {
    + static EMPLOYEE_HEADER: String
    + static PAY_STUB_HEADER: String
    - FileUtil()
    + static readFileToList(file: String) List<String>
    + static writeFile(outFile: String, lines: List<String>) void
    + writeFile(outFile: String, lines: List<String>, backup: boolean) void
    }


    class PayrollGenerator {
    - static DEFAULT_EMPLOYEE_FILE: String
    - static DEFAULT_PAYROLL_FILE: String
    - static DEFAULT_TIME_CARD_FILE: String
    - PayrollGenerator()
    + main(args: String[]) void
    }


    class Builder {
        - Builder()
        + static buildEmployeeFromCSV(csv: String) IEmployee
        + static buildTimeCardFromCSV(csv: String) ITimeCard
    }


    class Arguments {
        <<static>>
        - employeeFile: String
        - payrollFile: String
        - timeCards: String
        - Arguments()
        + getEmployeeFile() String
        + getPayrollFile() String
        + getTimeCards() String
        + printHelp() void
        + static process(args: String[]) Arguments
    }



